---
- name: make ~/.config
  file: path=~/.config state=directory

- name: install vim-plug
  command: curl -fLo {{ ansible_env.PWD}}/roles/dotfiles/files/nvim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim --create-dirs

- name: create nvim symlinks
  file: src={{ ansible_env.PWD }}/roles/dotfiles/files/nvim
        path=~/.config/nvim
        state=link
        force=yes

- name: install nvim plugins
  shell: nvim +PlugInstall +qall --headless

- name: install neovim Ruby plugin
  become: true
  shell: gem install neovim

- name: check for oh-my-zsh
  stat:
    path: "{{ lookup('env', 'HOME') }}/.config/oh-my-zsh"
  register: oh_my_zsh_dir

- name: install oh-my-zsh
  shell: ZSH={{ lookup('env', 'HOME') }}/.config/oh-my-zsh /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  when: not oh_my_zsh_dir.stat.exists

- name: check for zsh spaceship prompt
  stat:
    path: "{{ lookup('env', 'HOME') }}/.config/oh-my-zsh/themes/spaceship-prompt"
  register: zsh_spaceship_prompt_dir

- name: install zsh spaceship prompt
  command: git clone https://github.com/denysdovhan/spaceship-prompt.git {{ lookup('env', 'HOME') }}/.config/oh-my-zsh/themes/spaceship-prompt --depth=1
  when: not zsh_spaceship_prompt_dir.stat.exists

- name: create zsh spaceship prompt symlink
  file: src={{ lookup('env', 'HOME') }}/.config/oh-my-zsh/themes/spaceship-prompt/spaceship.zsh-theme
        path={{ lookup('env', 'HOME') }}/.config/oh-my-zsh/themes/spaceship.zsh-theme
        state=link
        force=yes

- name: check for zsh autosuggestions
  stat:
    path: "{{ lookup('env', 'HOME') }}/.config/oh-my-zsh/plugins/zsh-autosuggestions"
  register: zsh_autosuggestions_dir

- name: install zsh autosuggestions
  command: git clone https://github.com/zsh-users/zsh-autosuggestions {{ lookup('env', 'HOME') }}/.config/oh-my-zsh/plugins/zsh-autosuggestions
  when: not zsh_autosuggestions_dir.stat.exists

- name: create symlinks
  file: src={{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}
        path={{ lookup('env', 'HOME') }}/{{ item }}
        state=link
        force=yes
  loop: '{{dotfile_files}}'
